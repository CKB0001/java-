/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-12-20 23:44:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"zh\">\t\r\n");
      out.write("  <head>\t\r\n");
      out.write("  <meta charset=\"UTF-8\" />\t\t\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\t\t\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\t\t\r\n");
      out.write("  <title>登录页</title>\t\r\n");
      out.write("  \t<style>\t\t\r\n");
      out.write("      body {\r\n");
      out.write("        margin: 0;\t\t\t\t\r\n");
      out.write("        padding: 0;\t\t\t\t\r\n");
      out.write("        font-family: sans-serif;\t\t\t\r\n");
      out.write("        \tbackground: #34495e;\t\t\t\r\n");
      out.write("          }\t\t\t\r\n");
      out.write("          .box {\t\t\t\r\n");
      out.write("           width: 300px;\t\t\t\r\n");
      out.write("          padding: 40px;\t\t\t\r\n");
      out.write("          position: absolute;\t\t\t\t\r\n");
      out.write("          top: 50%;\t\t\t\t\r\n");
      out.write("          left: 50%;\t\t\t\t\r\n");
      out.write("          transform: translate(-50%, -50%);\t\t\t\r\n");
      out.write("           background: #191919;\t\t\t\t\r\n");
      out.write("          text-align: center;\t\t\t}\t\t\r\n");
      out.write("        \t.box h1 {\t\t\r\n");
      out.write("          color: white;\t\t\t\t\r\n");
      out.write("          text-transform: uppercase;\t\t\t\t\r\n");
      out.write("          font-weight: 500;\t\t\t\r\n");
      out.write("          }\t\t\r\n");
      out.write("          .box input[type='text'],.box input[type='password'] {\t\t\t\t\r\n");
      out.write("            border: 0;\t\t\t\t\r\n");
      out.write("            background: none;\t\t\t\t\r\n");
      out.write("            display: block;\t\t\t\r\n");
      out.write("            margin: 20px auto;\t\t\t\t\r\n");
      out.write("            text-align: center;\t\t\t\t\r\n");
      out.write("            border: 2px solid #3498db;\t\t\t\r\n");
      out.write("            padding: 14px 10px;\t\t\t\t\r\n");
      out.write("            width: 200px;\t\t\t\t\r\n");
      out.write("            outline: none;\t\t\t\t\r\n");
      out.write("            color: white;\t\t\t\t\r\n");
      out.write("            border-radius: 24px;\t\t\t\t\r\n");
      out.write("            transition: 0.25s;\t\t\t}\t\t\t\r\n");
      out.write("            .box input[type='text']:focus,.box input[type='password']:focus {\t\t\t\t\r\n");
      out.write("              width: 280px;\t\t\t\t\r\n");
      out.write("              border-color: #2ecc71;\t\t\r\n");
      out.write("              \t}\t\t\t\r\n");
      out.write("            .submit {\t\t\t\t\r\n");
      out.write("              border: 0;\t\t\t\t\r\n");
      out.write("              background: none;\t\t\t\t\r\n");
      out.write("              margin: 20px auto;\t\t\t\t\r\n");
      out.write("              margin-top: 0;\t\t\t\t\r\n");
      out.write("              display: inline-block;\t\t\t\t\r\n");
      out.write("              text-align: center;\t\t\t\r\n");
      out.write("            \tborder: 2px solid #3498db;\t\t\t\r\n");
      out.write("            \tpadding: 10px 30px;\t\t\t\t\r\n");
      out.write("              outline: none;\t\t\t\t\r\n");
      out.write("              color: white;\t\t\t\t\r\n");
      out.write("              border-radius: 24px;\t\t\t\t\r\n");
      out.write("              transition: 0.25s;\t\t\t\t\r\n");
      out.write("              cursor: pointer;\t\t\t\t\r\n");
      out.write("              text-decoration: none;\t\t\t\t\r\n");
      out.write("              font-size: 12px;\t\t\t}\t\t\r\n");
      out.write("            .submit:hover {\t\t\t\t\r\n");
      out.write("              background: #2ecc71;\t\t\t\t\r\n");
      out.write("              border-color: #2ecc71;\t\t\t}\t\t\r\n");
      out.write("            h1 {\r\n");
      out.write("              color: ghostwhite;\r\n");
      out.write("              text-align: center;\t\r\n");
      out.write("            }\r\n");
      out.write("              </style>\t\r\n");
      out.write("  </head>\t\r\n");
      out.write("  <body>\t\r\n");
      out.write("  <form action=\"login\" method=\"post\">\t\r\n");
      out.write("    <h1>清梦</h1>\r\n");
      out.write("    <div class=\"box\">\t\t\t\r\n");
      out.write("      <h1>登录</h1>\t\t\t\r\n");
      out.write("      <input type=\"text\" placeholder=\"userName\" name=\"user.u_name\" />\t\t\t\r\n");
      out.write("      <input type=\"password\" placeholder=\"userPassword\" name=\"user.u_password\"/>\t\r\n");
      out.write("      <input type=\"submit\" class=\"submit\" value=\"login\">\r\n");
      out.write("      <a class=\"submit\" href=\"User/register.jsp\" >Sign Up</a>\r\n");
      out.write("      \r\n");
      out.write("      <!--  \r\n");
      out.write("      \r\n");
      out.write("      <a class=\"submit\" >Login</a>\t\r\n");
      out.write("      <a class=\"submit\" >Sign Up</a>\t-->\r\n");
      out.write("    </div>\r\n");
      out.write("    </form>\t\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
